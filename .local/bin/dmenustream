#!/usr/bin/env sh

# Usage:
# `$0`: Ask for streaming type via dmenu
# `$0 screencast`: Stream both audio and screen
# `$0 video`: Stream only screen
# `$0 audio`: Stream only audio
# `$0 kill`: Kill existing streaming
#
# If there is already a running instance, user will be prompted to end it.

updateicon() {
	echo "$1" > /tmp/streamingicon
	pkill -RTMIN+9 "${STATUSBAR:?}"
	}

killstreaming() {
	recpid="$(cat /tmp/streamingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/streamingpid
	updateicon ""
	pkill -RTMIN+9 "${STATUSBAR:?}"
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	exit
	}

screencast() {
	STREAM_KEY="$(cat $HOME/.config/stream/streamkey)"
	ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i $DISPLAY \
	-f alsa -i default \
	-r 30 \
 	-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
	-bufsize "1000k"
	-pix_fmt yuv420p \
	-f flv \
	"rtmp://live-sjc.twitch.tv/app/$STREAM_KEY" &
	echo $! > /tmp/streamingpid
	updateicon "⏺️🎙️"
       	}

video() {
	STREAM_KEY="$(cat $HOME/.config/stream/streamkey)"
	ffmpeg \
	-f x11grab \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i $DISPLAY \
 	-c:v libx264 -qp 0 -r 30 \
	-pix_fmt yuv420p \
	-f flv \
	"rtmp://live-sjc.twitch.tv/app/$STREAM_KEY" &
	echo $! > /tmp/streamingpid
	updateicon "⏺️"
	}

webcamhidef() {
	STREAM_KEY="$(cat $HOME/.config/stream/streamkey)"
	ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	-pix_fmt yuv420p \
	-f flv \
	"rtmp://live-sjc.twitch.tv/app/$STREAM_KEY" &
	echo $! > /tmp/streamingpid
	updateicon "🎥"
	}

webcam() {
	STREAM_KEY="$(cat $HOME/.config/stream/streamkey)"
	ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	-pix_fmt yuv420p \
	-f flv \
	"rtmp://live-sjc.twitch.tv/app/$STREAM_KEY" &
	echo $! > /tmp/streamingpid
	updateicon "🎥"
	}


audio() {
	STREAM_KEY="$(cat $HOME/.config/stream/streamkey)"
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	-pix_fmt yuv420p \
	-f flv \
	"rtmp://live-sjc.twitch.tv/app/$STREAM_KEY" &
	echo $! > /tmp/streamingpid
	updateicon "🎙️"
	}

askstreaming() {
	choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select streaming style:")
	case "$choice" in
		screencast) screencast;;
		audio) audio;;
		video) video;;
		webcam) webcam;;
		"webcam (hi-def)") webcamhidef;;
	esac
	}

asktoend() {
	response=$(printf "No\\nYes" | dmenu -i -p "Streaming still active. End streaming?") &&
	[ "$response" = "Yes" ] &&  killstreaming
	}

case "$1" in
	screencast) screencast;;
	audio) audio;;
	video) video;;
	kill) killstreaming;;
	*) ([ -f /tmp/streamingpid ] && asktoend && exit) || askstreaming;;
esac
